//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/_Project/Scripts/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""959a620c-e73e-45b5-a0c0-55888cdaee0b"",
            ""actions"": [
                {
                    ""name"": ""PrimaryPointerPress"",
                    ""type"": ""Button"",
                    ""id"": ""30401588-9c88-4141-9490-9da3e25e842b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryPointerPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""0fcd72cc-73de-496b-951a-a30061758c78"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryTouchPress"",
                    ""type"": ""Button"",
                    ""id"": ""e9f2f55f-639d-4ce9-8f37-8d4839873b4a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryTouchPosition"",
                    ""type"": ""Value"",
                    ""id"": ""e2eca93e-f4f7-4683-8af5-b859f90c63f1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollZoom"",
                    ""type"": ""Value"",
                    ""id"": ""2abf1281-3d68-4775-b911-088692b69e27"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MiddleButtonPress"",
                    ""type"": ""Button"",
                    ""id"": ""f1b90ee7-740f-481c-93ed-ed928aa683b9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1c226027-142a-4bad-a047-aa0816797a9d"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""802f522d-cbfd-47bc-bc89-e53c0847aef0"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleButtonPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e537914d-7838-49e2-b5a6-70b9e2499fe4"",
                    ""path"": ""<Pointer>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryPointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41005ef5-6c13-4dcf-afb1-635ddfa5bd84"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e59ab714-a4b0-423f-b7bf-6692a5583fa9"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouchPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8f549cb-6ccb-4e27-91a1-c68a0c8029ed"",
                    ""path"": ""<Pointer>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryPointerPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_PrimaryPointerPress = m_Player.FindAction("PrimaryPointerPress", throwIfNotFound: true);
        m_Player_PrimaryPointerPosition = m_Player.FindAction("PrimaryPointerPosition", throwIfNotFound: true);
        m_Player_SecondaryTouchPress = m_Player.FindAction("SecondaryTouchPress", throwIfNotFound: true);
        m_Player_SecondaryTouchPosition = m_Player.FindAction("SecondaryTouchPosition", throwIfNotFound: true);
        m_Player_ScrollZoom = m_Player.FindAction("ScrollZoom", throwIfNotFound: true);
        m_Player_MiddleButtonPress = m_Player.FindAction("MiddleButtonPress", throwIfNotFound: true);
    }

    ~@PlayerInput()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, PlayerInput.Player.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_PrimaryPointerPress;
    private readonly InputAction m_Player_PrimaryPointerPosition;
    private readonly InputAction m_Player_SecondaryTouchPress;
    private readonly InputAction m_Player_SecondaryTouchPosition;
    private readonly InputAction m_Player_ScrollZoom;
    private readonly InputAction m_Player_MiddleButtonPress;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @PrimaryPointerPress => m_Wrapper.m_Player_PrimaryPointerPress;
        public InputAction @PrimaryPointerPosition => m_Wrapper.m_Player_PrimaryPointerPosition;
        public InputAction @SecondaryTouchPress => m_Wrapper.m_Player_SecondaryTouchPress;
        public InputAction @SecondaryTouchPosition => m_Wrapper.m_Player_SecondaryTouchPosition;
        public InputAction @ScrollZoom => m_Wrapper.m_Player_ScrollZoom;
        public InputAction @MiddleButtonPress => m_Wrapper.m_Player_MiddleButtonPress;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @PrimaryPointerPress.started += instance.OnPrimaryPointerPress;
            @PrimaryPointerPress.performed += instance.OnPrimaryPointerPress;
            @PrimaryPointerPress.canceled += instance.OnPrimaryPointerPress;
            @PrimaryPointerPosition.started += instance.OnPrimaryPointerPosition;
            @PrimaryPointerPosition.performed += instance.OnPrimaryPointerPosition;
            @PrimaryPointerPosition.canceled += instance.OnPrimaryPointerPosition;
            @SecondaryTouchPress.started += instance.OnSecondaryTouchPress;
            @SecondaryTouchPress.performed += instance.OnSecondaryTouchPress;
            @SecondaryTouchPress.canceled += instance.OnSecondaryTouchPress;
            @SecondaryTouchPosition.started += instance.OnSecondaryTouchPosition;
            @SecondaryTouchPosition.performed += instance.OnSecondaryTouchPosition;
            @SecondaryTouchPosition.canceled += instance.OnSecondaryTouchPosition;
            @ScrollZoom.started += instance.OnScrollZoom;
            @ScrollZoom.performed += instance.OnScrollZoom;
            @ScrollZoom.canceled += instance.OnScrollZoom;
            @MiddleButtonPress.started += instance.OnMiddleButtonPress;
            @MiddleButtonPress.performed += instance.OnMiddleButtonPress;
            @MiddleButtonPress.canceled += instance.OnMiddleButtonPress;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @PrimaryPointerPress.started -= instance.OnPrimaryPointerPress;
            @PrimaryPointerPress.performed -= instance.OnPrimaryPointerPress;
            @PrimaryPointerPress.canceled -= instance.OnPrimaryPointerPress;
            @PrimaryPointerPosition.started -= instance.OnPrimaryPointerPosition;
            @PrimaryPointerPosition.performed -= instance.OnPrimaryPointerPosition;
            @PrimaryPointerPosition.canceled -= instance.OnPrimaryPointerPosition;
            @SecondaryTouchPress.started -= instance.OnSecondaryTouchPress;
            @SecondaryTouchPress.performed -= instance.OnSecondaryTouchPress;
            @SecondaryTouchPress.canceled -= instance.OnSecondaryTouchPress;
            @SecondaryTouchPosition.started -= instance.OnSecondaryTouchPosition;
            @SecondaryTouchPosition.performed -= instance.OnSecondaryTouchPosition;
            @SecondaryTouchPosition.canceled -= instance.OnSecondaryTouchPosition;
            @ScrollZoom.started -= instance.OnScrollZoom;
            @ScrollZoom.performed -= instance.OnScrollZoom;
            @ScrollZoom.canceled -= instance.OnScrollZoom;
            @MiddleButtonPress.started -= instance.OnMiddleButtonPress;
            @MiddleButtonPress.performed -= instance.OnMiddleButtonPress;
            @MiddleButtonPress.canceled -= instance.OnMiddleButtonPress;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnPrimaryPointerPress(InputAction.CallbackContext context);
        void OnPrimaryPointerPosition(InputAction.CallbackContext context);
        void OnSecondaryTouchPress(InputAction.CallbackContext context);
        void OnSecondaryTouchPosition(InputAction.CallbackContext context);
        void OnScrollZoom(InputAction.CallbackContext context);
        void OnMiddleButtonPress(InputAction.CallbackContext context);
    }
}
